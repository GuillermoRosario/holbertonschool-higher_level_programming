The ``0-add_integer`` doctest
==========================
Imports ``add_integer`` function from ``0-add_integer``
and tests for any edge cases that may break the functionality
of the imported function

>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(0, 0)
0

>>> add_integer(1, 2)
3

>>> add_integer(-4, -4)
-8

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(-2, 100.3)
98

>>> add_integer(-2.5, -3.5)
-5

>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(9, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None, 9)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("School", 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer([0, 2])
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(-3.99, 4.99)
1

>>> add_integer(-0, -0)
0

>>> add_integer(float('inf'), float('-inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(-3r, 6)
Traceback (most recent call last):
...
SyntaxError: invalid syntax

>>> add_integer(777, 69e420**4)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('NaN'), 7)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer